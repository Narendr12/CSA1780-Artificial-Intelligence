def minimax(depth, node_index, is_max_player, values):
    if depth == 0 or node_index >= len(values):
        return values[node_index]

    if is_max_player:
        max_eval = float('-inf')
        for i in range(2):
            eval = minimax(depth - 1, node_index * 2 + i, False, values)
            max_eval = max(max_eval, eval)
        return max_eval
    else:
        min_eval = float('inf')
        for i in range(2):
            eval = minimax(depth - 1, node_index * 2 + i, True, values)
            min_eval = min(min_eval, eval)
        return min_eval

if __name__ == "__main__":
    values = [3, 5, 6, 9, 1, 2, 0, -1]
    tree_depth = 3
    result = minimax(tree_depth, 0, True, values)
    print("The optimal value is:", result)
